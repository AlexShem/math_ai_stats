## Real-Life Applications of Integrals

Integrals are not just abstract mathematical concepts; they have numerous practical applications across various fields. Let's explore some of them:

### Physics Applications

#### Distance from Speed

If you know a vehicle's speed $v(t)$ at each moment in time, the total distance traveled is:

$$d = \int_{t_1}^{t_2} v(t) \, dt$$

This is our car example from earlier.

#### Work Done by a Variable Force

When a force $F(x)$ varies with position, the work done is:

$$W = \int_{x_1}^{x_2} F(x) \, dx$$

```{python}
#| label: fig-variable-force
#| fig-cap: "Work done by a variable force"

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.patches import Polygon

def force(x):
    return 50 - 5*x  # A decreasing force (in Newtons)

x = np.linspace(0, 8, 1000)  # Position (in meters)
f = force(x)

fig, ax = plt.subplots(figsize=(10, 6))
ax.plot(x, f, 'r', linewidth=2)
ax.set_xlim(0, 8)
ax.set_ylim(0, 60)
ax.set_xlabel('Position (meters)')
ax.set_ylabel('Force (Newtons)')
ax.grid(True, linestyle='--', alpha=0.7)

# Fill the area under the curve from x=2 to x=6
a, b = 2, 6
ix = np.linspace(a, b)
iy = force(ix)
verts = [(a, 0)] + list(zip(ix, iy)) + [(b, 0)]
poly = Polygon(verts, facecolor='blue', edgecolor='blue', alpha=0.3)
ax.add_patch(poly)

# Annotate
ax.text(4, 15, "Work = $\\int_{x_1}^{x_2} F(x) \\, dx$", 
        horizontalalignment='center', fontsize=14)
ax.plot([a, a], [0, force(a)], 'k--')
ax.plot([b, b], [0, force(b)], 'k--')

ax.set_title("Work Done by a Variable Force")
plt.tight_layout()
plt.show()
```

### Economics Applications

#### Total Revenue over Time

If a company's revenue rate $R(t)$ changes over time, the total revenue is:

$$
\text{Total Revenue} = \int_{t_1}^{t_2} R(t) \, dt
$$

#### Consumer and Producer Surplus

In economics, the consumer surplus (benefit consumers receive above what they pay) is calculated as the area between the demand curve and the price line.

```{python}
#| label: fig-economics
#| fig-cap: "Consumer and producer surplus in economics"

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.patches import Polygon

def demand(q):
    return 100 - 2*q  # Demand curve: price as a function of quantity

def supply(q):
    return 20 + q  # Supply curve: price as a function of quantity

q = np.linspace(0, 50, 1000)
p_demand = demand(q)
p_supply = supply(q)

# Find equilibrium (where demand = supply)
# 100 - 2q = 20 + q
# 80 = 3q
# q = 26.67
q_equilibrium = 80/3
p_equilibrium = demand(q_equilibrium)  # or supply(q_equilibrium)

fig, ax = plt.subplots(figsize=(10, 6))
ax.plot(q, p_demand, 'b', linewidth=2, label='Demand')
ax.plot(q, p_supply, 'r', linewidth=2, label='Supply')
ax.set_xlim(0, 50)
ax.set_ylim(0, 100)
ax.set_xlabel('Quantity')
ax.set_ylabel('Price')
ax.grid(True, linestyle='--', alpha=0.7)
ax.legend()

# Mark equilibrium
ax.plot([q_equilibrium, q_equilibrium], [0, p_equilibrium], 'k--')
ax.plot([0, q_equilibrium], [p_equilibrium, p_equilibrium], 'k--')
ax.plot(q_equilibrium, p_equilibrium, 'ko')
ax.text(q_equilibrium+2, p_equilibrium-5, f'Equilibrium ({q_equilibrium:.1f}, {p_equilibrium:.1f})', fontsize=10)

# Consumer surplus (area between demand curve and equilibrium price)
iq = np.linspace(0, q_equilibrium)
ip_demand = demand(iq)
verts = [(0, p_equilibrium)] + list(zip(iq, ip_demand)) + [(q_equilibrium, p_equilibrium)]
poly = Polygon(verts, facecolor='blue', edgecolor='blue', alpha=0.3)
ax.add_patch(poly)
ax.text(q_equilibrium/2, 70, "Consumer\nSurplus", 
        horizontalalignment='center', fontsize=12)

# Producer surplus (area between equilibrium price and supply curve)
iq = np.linspace(0, q_equilibrium)
ip_supply = supply(iq)
verts = [(0, p_equilibrium)] + [(q_equilibrium, p_equilibrium)] + list(zip(iq[::-1], ip_supply[::-1]))
poly = Polygon(verts, facecolor='red', edgecolor='red', alpha=0.3)
ax.add_patch(poly)
ax.text(q_equilibrium/2, 40, "Producer\nSurplus", 
        horizontalalignment='center', fontsize=12)

ax.set_title("Consumer and Producer Surplus")
plt.tight_layout()
plt.show()
```

### Biology/Medicine Applications

#### Blood Flow Volume

If we know the blood flow rate $r(t)$ through an artery over time, the total volume of blood is:

$$V = \int_{t_1}^{t_2} r(t) \, dt$$

#### Drug Concentration

The total amount of a drug in the bloodstream can be calculated by integrating the concentration function over time.

### Engineering Applications

#### Material Usage

Engineers use integrals to calculate:

- Volume of complex shapes: $V = \int_{a}^{b} A(x) \, dx$ where $A(x)$ is the cross-sectional area
- Surface area of curved structures
- Mass of objects with varying density

#### Heat Transfer

The total heat transferred through a material over time is found using integration.

In all these applications, the core idea is the same: we're summing up infinitesimally small contributions to find a total amount. This demonstrates the power and versatility of integrals in solving real-world problems.
